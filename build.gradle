plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.30'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.30'
    id "org.flywaydb.flyway" version "5.0.7"
    id "org.jetbrains.kotlin.kapt" version "1.3.30"
}

apply plugin: 'io.spring.dependency-management'

group = 'kaiyujin.pebble'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
    set('domaVersion', '2.24.0')
}

kapt {
    arguments {
        arg("doma.resources.dir", processResources.destinationDir)
    }
}

dependencies {
    implementation "org.seasar.doma.boot:doma-spring-boot-starter:1.1.1"
    implementation "org.seasar.doma:doma:${domaVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtime 'org.postgresql:postgresql'
    kapt("org.seasar.doma:doma:${domaVersion}")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

flyway {
    def env = "local"
    switch(env) {
        case "local" :
            url      = 'jdbc:postgresql://localhost:5432/pebble'
            user     = 'postgres'
            password = 'postgres'
    }
}